// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConditionsInitParameters struct {
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, extra-properties, recipients, teams or priority.
	Field *string `json:"field,omitempty" tf:"field,omitempty"`

	// If field is set as extra-properties, key could be used for key-value pair.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default value is false.
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// (true) It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty and equals-ignore-whitespace.
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`
}

type ConditionsObservation struct {
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, extra-properties, recipients, teams or priority.
	Field *string `json:"field,omitempty" tf:"field,omitempty"`

	// If field is set as extra-properties, key could be used for key-value pair.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default value is false.
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// (true) It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty and equals-ignore-whitespace.
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`
}

type ConditionsParameters struct {

	// +kubebuilder:validation:Optional
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, extra-properties, recipients, teams or priority.
	// +kubebuilder:validation:Optional
	Field *string `json:"field" tf:"field,omitempty"`

	// If field is set as extra-properties, key could be used for key-value pair.
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default value is false.
	// +kubebuilder:validation:Optional
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// (true) It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty and equals-ignore-whitespace.
	// +kubebuilder:validation:Optional
	Operation *string `json:"operation" tf:"operation,omitempty"`

	// The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
	// +kubebuilder:validation:Optional
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`
}

type CriteriaInitParameters struct {

	// List of conditions will be checked before applying team routing rule. This field declaration should be omitted if the criteria type is set to match-all.
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CriteriaObservation struct {

	// List of conditions will be checked before applying team routing rule. This field declaration should be omitted if the criteria type is set to match-all.
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CriteriaParameters struct {

	// List of conditions will be checked before applying team routing rule. This field declaration should be omitted if the criteria type is set to match-all.
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type NotifyInitParameters struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the team routing rule
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/team/v1alpha1.Schedule
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a Schedule in team to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a Schedule in team to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NotifyObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the team routing rule
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type NotifyParameters struct {

	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the team routing rule
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/team/v1alpha1.Schedule
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a Schedule in team to populate name.
	// +kubebuilder:validation:Optional
	NameRef *v1.Reference `json:"nameRef,omitempty" tf:"-"`

	// Selector for a Schedule in team to populate name.
	// +kubebuilder:validation:Optional
	NameSelector *v1.Selector `json:"nameSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type TeamRoutingRuleInitParameters struct {

	// You can refer Criteria for detailed information about criteria and its fields
	Criteria []CriteriaInitParameters `json:"criteria,omitempty" tf:"criteria,omitempty"`

	// Only use when importing default routing rule
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values are: schedule, escalation, none
	Notify []NotifyInitParameters `json:"notify,omitempty" tf:"notify,omitempty"`

	// The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// Id of the team owning the routing rule
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/team/v1alpha1.Team
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// Reference to a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDRef *v1.Reference `json:"teamIdRef,omitempty" tf:"-"`

	// Selector for a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDSelector *v1.Selector `json:"teamIdSelector,omitempty" tf:"-"`

	// You can refer Time Restriction for detailed information about time restriction and its fields.
	TimeRestriction []TeamRoutingRuleTimeRestrictionInitParameters `json:"timeRestriction,omitempty" tf:"time_restriction,omitempty"`

	// Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`
}

type TeamRoutingRuleObservation struct {

	// You can refer Criteria for detailed information about criteria and its fields
	Criteria []CriteriaObservation `json:"criteria,omitempty" tf:"criteria,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Only use when importing default routing rule
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values are: schedule, escalation, none
	Notify []NotifyObservation `json:"notify,omitempty" tf:"notify,omitempty"`

	// The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// Id of the team owning the routing rule
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// You can refer Time Restriction for detailed information about time restriction and its fields.
	TimeRestriction []TeamRoutingRuleTimeRestrictionObservation `json:"timeRestriction,omitempty" tf:"time_restriction,omitempty"`

	// Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`
}

type TeamRoutingRuleParameters struct {

	// You can refer Criteria for detailed information about criteria and its fields
	// +kubebuilder:validation:Optional
	Criteria []CriteriaParameters `json:"criteria,omitempty" tf:"criteria,omitempty"`

	// Only use when importing default routing rule
	// +kubebuilder:validation:Optional
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// Target entity of schedule, escalation, or the reserved word none which will be notified in routing rule. The possible values are: schedule, escalation, none
	// +kubebuilder:validation:Optional
	Notify []NotifyParameters `json:"notify,omitempty" tf:"notify,omitempty"`

	// The order of the team routing rule within the rules. order value is actually the index of the team routing rule whose minimum value is 0 and whose maximum value is n-1 (number of team routing rules is n)
	// +kubebuilder:validation:Optional
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// Id of the team owning the routing rule
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/team/v1alpha1.Team
	// +kubebuilder:validation:Optional
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// Reference to a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDRef *v1.Reference `json:"teamIdRef,omitempty" tf:"-"`

	// Selector for a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDSelector *v1.Selector `json:"teamIdSelector,omitempty" tf:"-"`

	// You can refer Time Restriction for detailed information about time restriction and its fields.
	// +kubebuilder:validation:Optional
	TimeRestriction []TeamRoutingRuleTimeRestrictionParameters `json:"timeRestriction,omitempty" tf:"time_restriction,omitempty"`

	// Timezone of team routing rule. If timezone field is not given, account timezone is used as default.You can refer to Supported Locale IDs for available timezones
	// +kubebuilder:validation:Optional
	Timezone *string `json:"timezone,omitempty" tf:"timezone,omitempty"`
}

type TeamRoutingRuleTimeRestrictionInitParameters struct {
	Restriction []TimeRestrictionRestrictionInitParameters `json:"restriction,omitempty" tf:"restriction,omitempty"`

	Restrictions []TimeRestrictionRestrictionsInitParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TeamRoutingRuleTimeRestrictionObservation struct {
	Restriction []TimeRestrictionRestrictionObservation `json:"restriction,omitempty" tf:"restriction,omitempty"`

	Restrictions []TimeRestrictionRestrictionsObservation `json:"restrictions,omitempty" tf:"restrictions,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TeamRoutingRuleTimeRestrictionParameters struct {

	// +kubebuilder:validation:Optional
	Restriction []TimeRestrictionRestrictionParameters `json:"restriction,omitempty" tf:"restriction,omitempty"`

	// +kubebuilder:validation:Optional
	Restrictions []TimeRestrictionRestrictionsParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`

	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type TimeRestrictionRestrictionInitParameters struct {
	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type TimeRestrictionRestrictionObservation struct {
	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type TimeRestrictionRestrictionParameters struct {

	// +kubebuilder:validation:Optional
	EndHour *float64 `json:"endHour" tf:"end_hour,omitempty"`

	// +kubebuilder:validation:Optional
	EndMin *float64 `json:"endMin" tf:"end_min,omitempty"`

	// +kubebuilder:validation:Optional
	StartHour *float64 `json:"startHour" tf:"start_hour,omitempty"`

	// +kubebuilder:validation:Optional
	StartMin *float64 `json:"startMin" tf:"start_min,omitempty"`
}

type TimeRestrictionRestrictionsInitParameters struct {
	EndDay *string `json:"endDay,omitempty" tf:"end_day,omitempty"`

	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	StartDay *string `json:"startDay,omitempty" tf:"start_day,omitempty"`

	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type TimeRestrictionRestrictionsObservation struct {
	EndDay *string `json:"endDay,omitempty" tf:"end_day,omitempty"`

	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	StartDay *string `json:"startDay,omitempty" tf:"start_day,omitempty"`

	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type TimeRestrictionRestrictionsParameters struct {

	// +kubebuilder:validation:Optional
	EndDay *string `json:"endDay" tf:"end_day,omitempty"`

	// +kubebuilder:validation:Optional
	EndHour *float64 `json:"endHour" tf:"end_hour,omitempty"`

	// +kubebuilder:validation:Optional
	EndMin *float64 `json:"endMin" tf:"end_min,omitempty"`

	// +kubebuilder:validation:Optional
	StartDay *string `json:"startDay" tf:"start_day,omitempty"`

	// +kubebuilder:validation:Optional
	StartHour *float64 `json:"startHour" tf:"start_hour,omitempty"`

	// +kubebuilder:validation:Optional
	StartMin *float64 `json:"startMin" tf:"start_min,omitempty"`
}

// TeamRoutingRuleSpec defines the desired state of TeamRoutingRule
type TeamRoutingRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TeamRoutingRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TeamRoutingRuleInitParameters `json:"initProvider,omitempty"`
}

// TeamRoutingRuleStatus defines the observed state of TeamRoutingRule.
type TeamRoutingRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TeamRoutingRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// TeamRoutingRule is the Schema for the TeamRoutingRules API. Manages a Team Routing Rule within Opsgenie.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opsgenie}
type TeamRoutingRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.notify) || (has(self.initProvider) && has(self.initProvider.notify))",message="spec.forProvider.notify is a required parameter"
	Spec   TeamRoutingRuleSpec   `json:"spec"`
	Status TeamRoutingRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TeamRoutingRuleList contains a list of TeamRoutingRules
type TeamRoutingRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TeamRoutingRule `json:"items"`
}

// Repository type metadata.
var (
	TeamRoutingRule_Kind             = "TeamRoutingRule"
	TeamRoutingRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TeamRoutingRule_Kind}.String()
	TeamRoutingRule_KindAPIVersion   = TeamRoutingRule_Kind + "." + CRDGroupVersion.String()
	TeamRoutingRule_GroupVersionKind = CRDGroupVersion.WithKind(TeamRoutingRule_Kind)
)

func init() {
	SchemeBuilder.Register(&TeamRoutingRule{}, &TeamRoutingRuleList{})
}
