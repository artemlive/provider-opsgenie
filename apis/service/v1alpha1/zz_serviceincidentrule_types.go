// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConditionsInitParameters struct {

	// User defined value that will be compared with alert field according to the operation. Default: empty string
	// User defined value that will be compared with alert field according to the operation. Default value is empty string
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, details, extra-properties, recipients, teams, priority
	Field *string `json:"field,omitempty" tf:"field,omitempty"`

	// If 'field' is set as 'extra-properties', key could be used for key-value pair
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default: false
	// Indicates behaviour of the given operation. Default value is false
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty, equals-ignore-whitespace.
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`
}

type ConditionsObservation struct {

	// User defined value that will be compared with alert field according to the operation. Default: empty string
	// User defined value that will be compared with alert field according to the operation. Default value is empty string
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, details, extra-properties, recipients, teams, priority
	Field *string `json:"field,omitempty" tf:"field,omitempty"`

	// If 'field' is set as 'extra-properties', key could be used for key-value pair
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default: false
	// Indicates behaviour of the given operation. Default value is false
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty, equals-ignore-whitespace.
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`
}

type ConditionsParameters struct {

	// User defined value that will be compared with alert field according to the operation. Default: empty string
	// User defined value that will be compared with alert field according to the operation. Default value is empty string
	// +kubebuilder:validation:Optional
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, details, extra-properties, recipients, teams, priority
	// +kubebuilder:validation:Optional
	Field *string `json:"field" tf:"field,omitempty"`

	// If 'field' is set as 'extra-properties', key could be used for key-value pair
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default: false
	// Indicates behaviour of the given operation. Default value is false
	// +kubebuilder:validation:Optional
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty, equals-ignore-whitespace.
	// +kubebuilder:validation:Optional
	Operation *string `json:"operation" tf:"operation,omitempty"`
}

type IncidentPropertiesInitParameters struct {

	// Description that is generally used to provide a detailed information about the alert.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Map of key-value pairs to use as custom properties of the alert.
	// +mapType=granular
	Details map[string]*string `json:"details,omitempty" tf:"details,omitempty"`

	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// Priority level of the alert. Possible values are P1, P2, P3, P4 and P5
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// DEtails about stakeholders for this rule. This is a block, structure is documented below.
	StakeholderProperties []StakeholderPropertiesInitParameters `json:"stakeholderProperties,omitempty" tf:"stakeholder_properties,omitempty"`

	// Tags of the alert.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type IncidentPropertiesObservation struct {

	// Description that is generally used to provide a detailed information about the alert.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Map of key-value pairs to use as custom properties of the alert.
	// +mapType=granular
	Details map[string]*string `json:"details,omitempty" tf:"details,omitempty"`

	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// Priority level of the alert. Possible values are P1, P2, P3, P4 and P5
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// DEtails about stakeholders for this rule. This is a block, structure is documented below.
	StakeholderProperties []StakeholderPropertiesObservation `json:"stakeholderProperties,omitempty" tf:"stakeholder_properties,omitempty"`

	// Tags of the alert.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type IncidentPropertiesParameters struct {

	// Description that is generally used to provide a detailed information about the alert.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Map of key-value pairs to use as custom properties of the alert.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Details map[string]*string `json:"details,omitempty" tf:"details,omitempty"`

	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	// +kubebuilder:validation:Optional
	Message *string `json:"message" tf:"message,omitempty"`

	// Priority level of the alert. Possible values are P1, P2, P3, P4 and P5
	// +kubebuilder:validation:Optional
	Priority *string `json:"priority" tf:"priority,omitempty"`

	// DEtails about stakeholders for this rule. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	StakeholderProperties []StakeholderPropertiesParameters `json:"stakeholderProperties" tf:"stakeholder_properties,omitempty"`

	// Tags of the alert.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type IncidentRuleInitParameters struct {

	// A Condition type, supported types are: match-all, match-any-condition, match-all-conditions. Default: match-all
	ConditionMatchType *string `json:"conditionMatchType,omitempty" tf:"condition_match_type,omitempty"`

	// Conditions applied to incident. This is a block, structure is documented below.
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Properties for incident rule. This is a block, structure is documented below.
	IncidentProperties []IncidentPropertiesInitParameters `json:"incidentProperties,omitempty" tf:"incident_properties,omitempty"`
}

type IncidentRuleObservation struct {

	// A Condition type, supported types are: match-all, match-any-condition, match-all-conditions. Default: match-all
	ConditionMatchType *string `json:"conditionMatchType,omitempty" tf:"condition_match_type,omitempty"`

	// Conditions applied to incident. This is a block, structure is documented below.
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Properties for incident rule. This is a block, structure is documented below.
	IncidentProperties []IncidentPropertiesObservation `json:"incidentProperties,omitempty" tf:"incident_properties,omitempty"`
}

type IncidentRuleParameters struct {

	// A Condition type, supported types are: match-all, match-any-condition, match-all-conditions. Default: match-all
	// +kubebuilder:validation:Optional
	ConditionMatchType *string `json:"conditionMatchType,omitempty" tf:"condition_match_type,omitempty"`

	// Conditions applied to incident. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// Properties for incident rule. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	IncidentProperties []IncidentPropertiesParameters `json:"incidentProperties" tf:"incident_properties,omitempty"`
}

type ServiceIncidentRuleInitParameters struct {

	// This is the rule configuration for this incident rule. This is a block, structure is documented below.
	IncidentRule []IncidentRuleInitParameters `json:"incidentRule,omitempty" tf:"incident_rule,omitempty"`

	// ID of the service associated
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/service/v1alpha1.Service
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// Reference to a Service in service to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDRef *v1.Reference `json:"serviceIdRef,omitempty" tf:"-"`

	// Selector for a Service in service to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDSelector *v1.Selector `json:"serviceIdSelector,omitempty" tf:"-"`
}

type ServiceIncidentRuleObservation struct {

	// The ID of the Opsgenie Service Incident Policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// This is the rule configuration for this incident rule. This is a block, structure is documented below.
	IncidentRule []IncidentRuleObservation `json:"incidentRule,omitempty" tf:"incident_rule,omitempty"`

	// ID of the service associated
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`
}

type ServiceIncidentRuleParameters struct {

	// This is the rule configuration for this incident rule. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	IncidentRule []IncidentRuleParameters `json:"incidentRule,omitempty" tf:"incident_rule,omitempty"`

	// ID of the service associated
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/service/v1alpha1.Service
	// +kubebuilder:validation:Optional
	ServiceID *string `json:"serviceId,omitempty" tf:"service_id,omitempty"`

	// Reference to a Service in service to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDRef *v1.Reference `json:"serviceIdRef,omitempty" tf:"-"`

	// Selector for a Service in service to populate serviceId.
	// +kubebuilder:validation:Optional
	ServiceIDSelector *v1.Selector `json:"serviceIdSelector,omitempty" tf:"-"`
}

type StakeholderPropertiesInitParameters struct {

	// Description that is generally used to provide a detailed information about the alert.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Option to enable stakeholder notifications.Default value is true.
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`
}

type StakeholderPropertiesObservation struct {

	// Description that is generally used to provide a detailed information about the alert.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Option to enable stakeholder notifications.Default value is true.
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	Message *string `json:"message,omitempty" tf:"message,omitempty"`
}

type StakeholderPropertiesParameters struct {

	// Description that is generally used to provide a detailed information about the alert.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Option to enable stakeholder notifications.Default value is true.
	// +kubebuilder:validation:Optional
	Enable *bool `json:"enable,omitempty" tf:"enable,omitempty"`

	// Message that is to be passed to audience that is generally used to provide a content information about the alert.
	// +kubebuilder:validation:Optional
	Message *string `json:"message" tf:"message,omitempty"`
}

// ServiceIncidentRuleSpec defines the desired state of ServiceIncidentRule
type ServiceIncidentRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceIncidentRuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceIncidentRuleInitParameters `json:"initProvider,omitempty"`
}

// ServiceIncidentRuleStatus defines the observed state of ServiceIncidentRule.
type ServiceIncidentRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceIncidentRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceIncidentRule is the Schema for the ServiceIncidentRules API. Manages a Service Incident Rule within Opsgenie.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opsgenie}
type ServiceIncidentRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.incidentRule) || (has(self.initProvider) && has(self.initProvider.incidentRule))",message="spec.forProvider.incidentRule is a required parameter"
	Spec   ServiceIncidentRuleSpec   `json:"spec"`
	Status ServiceIncidentRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceIncidentRuleList contains a list of ServiceIncidentRules
type ServiceIncidentRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceIncidentRule `json:"items"`
}

// Repository type metadata.
var (
	ServiceIncidentRule_Kind             = "ServiceIncidentRule"
	ServiceIncidentRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceIncidentRule_Kind}.String()
	ServiceIncidentRule_KindAPIVersion   = ServiceIncidentRule_Kind + "." + CRDGroupVersion.String()
	ServiceIncidentRule_GroupVersionKind = CRDGroupVersion.WithKind(ServiceIncidentRule_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceIncidentRule{}, &ServiceIncidentRuleList{})
}
