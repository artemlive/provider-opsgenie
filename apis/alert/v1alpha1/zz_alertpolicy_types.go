// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlertPolicyInitParameters struct {

	// Actions to add to the alerts original actions value as a list of strings. If ignore_original_actions field is set to true, this will replace the original actions.
	// +listType=set
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// Description of the alert. You can use {{description}} to refer to the original alert description. Default: {{description}}
	AlertDescription *string `json:"alertDescription,omitempty" tf:"alert_description,omitempty"`

	// Alias of the alert. You can use {{alias}} to refer to the original alias. Default: {{alias}}
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// It will trigger other modify policies if set to true. Default: false
	ContinuePolicy *bool `json:"continuePolicy,omitempty" tf:"continue_policy,omitempty"`

	// If policy should be enabled. Default: true
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Entity field of the alert. You can use {{entity}} to refer to the original entity. Default: {{entity}}
	Entity *string `json:"entity,omitempty" tf:"entity,omitempty"`

	// A alert filter which will be applied. This filter can be empty: filter {} - this means match-all. This is a block, structure is documented below.
	Filter []FilterInitParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// If set to true, policy will ignore the original actions of the alert. Default: false
	IgnoreOriginalActions *bool `json:"ignoreOriginalActions,omitempty" tf:"ignore_original_actions,omitempty"`

	// If set to true, policy will ignore the original details of the alert. Default: false
	IgnoreOriginalDetails *bool `json:"ignoreOriginalDetails,omitempty" tf:"ignore_original_details,omitempty"`

	// If set to true, policy will ignore the original responders of the alert. Default: false
	IgnoreOriginalResponders *bool `json:"ignoreOriginalResponders,omitempty" tf:"ignore_original_responders,omitempty"`

	// If set to true, policy will ignore the original tags of the alert. Default: false
	IgnoreOriginalTags *bool `json:"ignoreOriginalTags,omitempty" tf:"ignore_original_tags,omitempty"`

	// Message of the alerts
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// Name of the alert policy
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Description of the policy. This can be max 512 characters.
	PolicyDescription *string `json:"policyDescription,omitempty" tf:"policy_description,omitempty"`

	// Priority of the alert. Should be one of P1, P2, P3, P4, or P5
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If ignore_original_responders field is set to true, this will replace the original responders. The possible values for responders are: user, team, escalation, schedule. This is a block, structure is documented below.
	Responders []RespondersInitParameters `json:"responders,omitempty" tf:"responders,omitempty"`

	// Source field of the alert. You can use {{source}} to refer to the original source. Default: {{source}}
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Tags to add to the alerts original tags value as a list of strings. If ignore_original_responders field is set to true, this will replace the original responders.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Id of team that this policy belongs to.
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/team/v1alpha1.Team
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// Reference to a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDRef *v1.Reference `json:"teamIdRef,omitempty" tf:"-"`

	// Selector for a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDSelector *v1.Selector `json:"teamIdSelector,omitempty" tf:"-"`

	// Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.
	TimeRestriction []TimeRestrictionInitParameters `json:"timeRestriction,omitempty" tf:"time_restriction,omitempty"`
}

type AlertPolicyObservation struct {

	// Actions to add to the alerts original actions value as a list of strings. If ignore_original_actions field is set to true, this will replace the original actions.
	// +listType=set
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// Description of the alert. You can use {{description}} to refer to the original alert description. Default: {{description}}
	AlertDescription *string `json:"alertDescription,omitempty" tf:"alert_description,omitempty"`

	// Alias of the alert. You can use {{alias}} to refer to the original alias. Default: {{alias}}
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// It will trigger other modify policies if set to true. Default: false
	ContinuePolicy *bool `json:"continuePolicy,omitempty" tf:"continue_policy,omitempty"`

	// If policy should be enabled. Default: true
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Entity field of the alert. You can use {{entity}} to refer to the original entity. Default: {{entity}}
	Entity *string `json:"entity,omitempty" tf:"entity,omitempty"`

	// A alert filter which will be applied. This filter can be empty: filter {} - this means match-all. This is a block, structure is documented below.
	Filter []FilterObservation `json:"filter,omitempty" tf:"filter,omitempty"`

	// The ID of the Opsgenie Alert Policy.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// If set to true, policy will ignore the original actions of the alert. Default: false
	IgnoreOriginalActions *bool `json:"ignoreOriginalActions,omitempty" tf:"ignore_original_actions,omitempty"`

	// If set to true, policy will ignore the original details of the alert. Default: false
	IgnoreOriginalDetails *bool `json:"ignoreOriginalDetails,omitempty" tf:"ignore_original_details,omitempty"`

	// If set to true, policy will ignore the original responders of the alert. Default: false
	IgnoreOriginalResponders *bool `json:"ignoreOriginalResponders,omitempty" tf:"ignore_original_responders,omitempty"`

	// If set to true, policy will ignore the original tags of the alert. Default: false
	IgnoreOriginalTags *bool `json:"ignoreOriginalTags,omitempty" tf:"ignore_original_tags,omitempty"`

	// Message of the alerts
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// Name of the alert policy
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Description of the policy. This can be max 512 characters.
	PolicyDescription *string `json:"policyDescription,omitempty" tf:"policy_description,omitempty"`

	// Priority of the alert. Should be one of P1, P2, P3, P4, or P5
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If ignore_original_responders field is set to true, this will replace the original responders. The possible values for responders are: user, team, escalation, schedule. This is a block, structure is documented below.
	Responders []RespondersObservation `json:"responders,omitempty" tf:"responders,omitempty"`

	// Source field of the alert. You can use {{source}} to refer to the original source. Default: {{source}}
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Tags to add to the alerts original tags value as a list of strings. If ignore_original_responders field is set to true, this will replace the original responders.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Id of team that this policy belongs to.
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.
	TimeRestriction []TimeRestrictionObservation `json:"timeRestriction,omitempty" tf:"time_restriction,omitempty"`
}

type AlertPolicyParameters struct {

	// Actions to add to the alerts original actions value as a list of strings. If ignore_original_actions field is set to true, this will replace the original actions.
	// +kubebuilder:validation:Optional
	// +listType=set
	Actions []*string `json:"actions,omitempty" tf:"actions,omitempty"`

	// Description of the alert. You can use {{description}} to refer to the original alert description. Default: {{description}}
	// +kubebuilder:validation:Optional
	AlertDescription *string `json:"alertDescription,omitempty" tf:"alert_description,omitempty"`

	// Alias of the alert. You can use {{alias}} to refer to the original alias. Default: {{alias}}
	// +kubebuilder:validation:Optional
	Alias *string `json:"alias,omitempty" tf:"alias,omitempty"`

	// It will trigger other modify policies if set to true. Default: false
	// +kubebuilder:validation:Optional
	ContinuePolicy *bool `json:"continuePolicy,omitempty" tf:"continue_policy,omitempty"`

	// If policy should be enabled. Default: true
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Entity field of the alert. You can use {{entity}} to refer to the original entity. Default: {{entity}}
	// +kubebuilder:validation:Optional
	Entity *string `json:"entity,omitempty" tf:"entity,omitempty"`

	// A alert filter which will be applied. This filter can be empty: filter {} - this means match-all. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	Filter []FilterParameters `json:"filter,omitempty" tf:"filter,omitempty"`

	// If set to true, policy will ignore the original actions of the alert. Default: false
	// +kubebuilder:validation:Optional
	IgnoreOriginalActions *bool `json:"ignoreOriginalActions,omitempty" tf:"ignore_original_actions,omitempty"`

	// If set to true, policy will ignore the original details of the alert. Default: false
	// +kubebuilder:validation:Optional
	IgnoreOriginalDetails *bool `json:"ignoreOriginalDetails,omitempty" tf:"ignore_original_details,omitempty"`

	// If set to true, policy will ignore the original responders of the alert. Default: false
	// +kubebuilder:validation:Optional
	IgnoreOriginalResponders *bool `json:"ignoreOriginalResponders,omitempty" tf:"ignore_original_responders,omitempty"`

	// If set to true, policy will ignore the original tags of the alert. Default: false
	// +kubebuilder:validation:Optional
	IgnoreOriginalTags *bool `json:"ignoreOriginalTags,omitempty" tf:"ignore_original_tags,omitempty"`

	// Message of the alerts
	// +kubebuilder:validation:Optional
	Message *string `json:"message,omitempty" tf:"message,omitempty"`

	// Name of the alert policy
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Description of the policy. This can be max 512 characters.
	// +kubebuilder:validation:Optional
	PolicyDescription *string `json:"policyDescription,omitempty" tf:"policy_description,omitempty"`

	// Priority of the alert. Should be one of P1, P2, P3, P4, or P5
	// +kubebuilder:validation:Optional
	Priority *string `json:"priority,omitempty" tf:"priority,omitempty"`

	// Responders to add to the alerts original responders value as a list of teams, users or the reserved word none or all. If ignore_original_responders field is set to true, this will replace the original responders. The possible values for responders are: user, team, escalation, schedule. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	Responders []RespondersParameters `json:"responders,omitempty" tf:"responders,omitempty"`

	// Source field of the alert. You can use {{source}} to refer to the original source. Default: {{source}}
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Tags to add to the alerts original tags value as a list of strings. If ignore_original_responders field is set to true, this will replace the original responders.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Id of team that this policy belongs to.
	// +crossplane:generate:reference:type=github.com/macpaw/provider-opsgenie/apis/team/v1alpha1.Team
	// +kubebuilder:validation:Optional
	TeamID *string `json:"teamId,omitempty" tf:"team_id,omitempty"`

	// Reference to a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDRef *v1.Reference `json:"teamIdRef,omitempty" tf:"-"`

	// Selector for a Team in team to populate teamId.
	// +kubebuilder:validation:Optional
	TeamIDSelector *v1.Selector `json:"teamIdSelector,omitempty" tf:"-"`

	// Time restrictions specified in this field must be met for this policy to work. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	TimeRestriction []TimeRestrictionParameters `json:"timeRestriction,omitempty" tf:"time_restriction,omitempty"`
}

type ConditionsInitParameters struct {

	// User defined value that will be compared with alert field according to the operation. Default: empty string
	// User defined value that will be compared with alert field according to the operation. Default value is empty string
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, details, extra-properties, responders, teams, priority
	Field *string `json:"field,omitempty" tf:"field,omitempty"`

	// If field is set as extra-properties, key could be used for key-value pair
	// If 'field' is set as 'extra-properties', key could be used for key-value pair
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default: false
	// Indicates behaviour of the given operation. Default value is false
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty, equals-ignore-whitespace.
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// Order of the condition in conditions list
	// Order of the condition in conditions list
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`
}

type ConditionsObservation struct {

	// User defined value that will be compared with alert field according to the operation. Default: empty string
	// User defined value that will be compared with alert field according to the operation. Default value is empty string
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, details, extra-properties, responders, teams, priority
	Field *string `json:"field,omitempty" tf:"field,omitempty"`

	// If field is set as extra-properties, key could be used for key-value pair
	// If 'field' is set as 'extra-properties', key could be used for key-value pair
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default: false
	// Indicates behaviour of the given operation. Default value is false
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty, equals-ignore-whitespace.
	Operation *string `json:"operation,omitempty" tf:"operation,omitempty"`

	// Order of the condition in conditions list
	// Order of the condition in conditions list
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`
}

type ConditionsParameters struct {

	// User defined value that will be compared with alert field according to the operation. Default: empty string
	// User defined value that will be compared with alert field according to the operation. Default value is empty string
	// +kubebuilder:validation:Optional
	ExpectedValue *string `json:"expectedValue,omitempty" tf:"expected_value,omitempty"`

	// Specifies which alert field will be used in condition. Possible values are message, alias, description, source, entity, tags, actions, details, extra-properties, responders, teams, priority
	// +kubebuilder:validation:Optional
	Field *string `json:"field" tf:"field,omitempty"`

	// If field is set as extra-properties, key could be used for key-value pair
	// If 'field' is set as 'extra-properties', key could be used for key-value pair
	// +kubebuilder:validation:Optional
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Indicates behaviour of the given operation. Default: false
	// Indicates behaviour of the given operation. Default value is false
	// +kubebuilder:validation:Optional
	Not *bool `json:"not,omitempty" tf:"not,omitempty"`

	// It is the operation that will be executed for the given field and key. Possible operations are matches, contains, starts-with, ends-with, equals, contains-key, contains-value, greater-than, less-than, is-empty, equals-ignore-whitespace.
	// +kubebuilder:validation:Optional
	Operation *string `json:"operation" tf:"operation,omitempty"`

	// Order of the condition in conditions list
	// Order of the condition in conditions list
	// +kubebuilder:validation:Optional
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`
}

type FilterInitParameters struct {

	// Conditions applied to filter. This is a block, structure is documented below.
	Conditions []ConditionsInitParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// A filter type, supported types are: match-all, match-any-condition, match-all-conditions. Default: match-all
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FilterObservation struct {

	// Conditions applied to filter. This is a block, structure is documented below.
	Conditions []ConditionsObservation `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// A filter type, supported types are: match-all, match-any-condition, match-all-conditions. Default: match-all
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type FilterParameters struct {

	// Conditions applied to filter. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	Conditions []ConditionsParameters `json:"conditions,omitempty" tf:"conditions,omitempty"`

	// A filter type, supported types are: match-all, match-any-condition, match-all-conditions. Default: match-all
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RespondersInitParameters struct {

	// ID of the responder
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the responder
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Type of responder. Acceptable values are: user, team, escalation or schedule
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Username of the responder
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RespondersObservation struct {

	// ID of the responder
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Name of the responder
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Type of responder. Acceptable values are: user, team, escalation or schedule
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Username of the responder
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RespondersParameters struct {

	// ID of the responder
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// Name of the responder
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Type of responder. Acceptable values are: user, team, escalation or schedule
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Username of the responder
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type RestrictionInitParameters struct {

	// Ending hour of restriction on defined end_day
	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	// Ending minute of restriction on defined end_hour
	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	// Starting hour of restriction on defined start_day
	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	// Staring minute of restriction on defined start_hour
	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type RestrictionObservation struct {

	// Ending hour of restriction on defined end_day
	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	// Ending minute of restriction on defined end_hour
	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	// Starting hour of restriction on defined start_day
	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	// Staring minute of restriction on defined start_hour
	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type RestrictionParameters struct {

	// Ending hour of restriction on defined end_day
	// +kubebuilder:validation:Optional
	EndHour *float64 `json:"endHour" tf:"end_hour,omitempty"`

	// Ending minute of restriction on defined end_hour
	// +kubebuilder:validation:Optional
	EndMin *float64 `json:"endMin" tf:"end_min,omitempty"`

	// Starting hour of restriction on defined start_day
	// +kubebuilder:validation:Optional
	StartHour *float64 `json:"startHour" tf:"start_hour,omitempty"`

	// Staring minute of restriction on defined start_hour
	// +kubebuilder:validation:Optional
	StartMin *float64 `json:"startMin" tf:"start_min,omitempty"`
}

type RestrictionsInitParameters struct {

	// Ending day of restriction (eg. wednesday)
	EndDay *string `json:"endDay,omitempty" tf:"end_day,omitempty"`

	// Ending hour of restriction on defined end_day
	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	// Ending minute of restriction on defined end_hour
	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	// Starting day of restriction (eg. monday)
	StartDay *string `json:"startDay,omitempty" tf:"start_day,omitempty"`

	// Starting hour of restriction on defined start_day
	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	// Staring minute of restriction on defined start_hour
	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type RestrictionsObservation struct {

	// Ending day of restriction (eg. wednesday)
	EndDay *string `json:"endDay,omitempty" tf:"end_day,omitempty"`

	// Ending hour of restriction on defined end_day
	EndHour *float64 `json:"endHour,omitempty" tf:"end_hour,omitempty"`

	// Ending minute of restriction on defined end_hour
	EndMin *float64 `json:"endMin,omitempty" tf:"end_min,omitempty"`

	// Starting day of restriction (eg. monday)
	StartDay *string `json:"startDay,omitempty" tf:"start_day,omitempty"`

	// Starting hour of restriction on defined start_day
	StartHour *float64 `json:"startHour,omitempty" tf:"start_hour,omitempty"`

	// Staring minute of restriction on defined start_hour
	StartMin *float64 `json:"startMin,omitempty" tf:"start_min,omitempty"`
}

type RestrictionsParameters struct {

	// Ending day of restriction (eg. wednesday)
	// +kubebuilder:validation:Optional
	EndDay *string `json:"endDay" tf:"end_day,omitempty"`

	// Ending hour of restriction on defined end_day
	// +kubebuilder:validation:Optional
	EndHour *float64 `json:"endHour" tf:"end_hour,omitempty"`

	// Ending minute of restriction on defined end_hour
	// +kubebuilder:validation:Optional
	EndMin *float64 `json:"endMin" tf:"end_min,omitempty"`

	// Starting day of restriction (eg. monday)
	// +kubebuilder:validation:Optional
	StartDay *string `json:"startDay" tf:"start_day,omitempty"`

	// Starting hour of restriction on defined start_day
	// +kubebuilder:validation:Optional
	StartHour *float64 `json:"startHour" tf:"start_hour,omitempty"`

	// Staring minute of restriction on defined start_hour
	// +kubebuilder:validation:Optional
	StartMin *float64 `json:"startMin" tf:"start_min,omitempty"`
}

type TimeRestrictionInitParameters struct {

	// A definition of hourly definition applied daily, this has to be used with combination: type = time-of-day. This is a block, structure is documented below.
	Restriction []RestrictionInitParameters `json:"restriction,omitempty" tf:"restriction,omitempty"`

	// List of days and hours definitions for field type = weekday-and-time-of-day. This is a block, structure is documented below.
	Restrictions []RestrictionsInitParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`

	// Defines if restriction should apply daily on given hours or on certain days and hours. Possible values are: time-of-day, weekday-and-time-of-day
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TimeRestrictionObservation struct {

	// A definition of hourly definition applied daily, this has to be used with combination: type = time-of-day. This is a block, structure is documented below.
	Restriction []RestrictionObservation `json:"restriction,omitempty" tf:"restriction,omitempty"`

	// List of days and hours definitions for field type = weekday-and-time-of-day. This is a block, structure is documented below.
	Restrictions []RestrictionsObservation `json:"restrictions,omitempty" tf:"restrictions,omitempty"`

	// Defines if restriction should apply daily on given hours or on certain days and hours. Possible values are: time-of-day, weekday-and-time-of-day
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TimeRestrictionParameters struct {

	// A definition of hourly definition applied daily, this has to be used with combination: type = time-of-day. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	Restriction []RestrictionParameters `json:"restriction,omitempty" tf:"restriction,omitempty"`

	// List of days and hours definitions for field type = weekday-and-time-of-day. This is a block, structure is documented below.
	// +kubebuilder:validation:Optional
	Restrictions []RestrictionsParameters `json:"restrictions,omitempty" tf:"restrictions,omitempty"`

	// Defines if restriction should apply daily on given hours or on certain days and hours. Possible values are: time-of-day, weekday-and-time-of-day
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

// AlertPolicySpec defines the desired state of AlertPolicy
type AlertPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AlertPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AlertPolicyInitParameters `json:"initProvider,omitempty"`
}

// AlertPolicyStatus defines the observed state of AlertPolicy.
type AlertPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AlertPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AlertPolicy is the Schema for the AlertPolicys API. Manages a Alert Policy within Opsgenie.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,opsgenie}
type AlertPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.message) || (has(self.initProvider) && has(self.initProvider.message))",message="spec.forProvider.message is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   AlertPolicySpec   `json:"spec"`
	Status AlertPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AlertPolicyList contains a list of AlertPolicys
type AlertPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AlertPolicy `json:"items"`
}

// Repository type metadata.
var (
	AlertPolicy_Kind             = "AlertPolicy"
	AlertPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AlertPolicy_Kind}.String()
	AlertPolicy_KindAPIVersion   = AlertPolicy_Kind + "." + CRDGroupVersion.String()
	AlertPolicy_GroupVersionKind = CRDGroupVersion.WithKind(AlertPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&AlertPolicy{}, &AlertPolicyList{})
}
